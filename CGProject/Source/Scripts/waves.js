!function () { "use strict"; var e, o, n = 6, t = [], i = 60, d = ["#f80000", "#00f800", "#0000f8"]; function r() { var n = window.getComputedStyle(document.querySelector(".header-2"), null).getPropertyValue("background-color"); o.fillStyle = n, o.globalCompositeOperation = "source-over", o.fillRect(0, 0, e.width, e.height), o.globalCompositeOperation = "screen"; for (var i = 0; i < t.length; i++) { for (var d = 0; d < t[i].nodes.length; d++)s(t[i].nodes[d]); h(t[i]) } o.fillStyle = n, requestAnimationFrame(r) } function l(o, n, t) { this.colour = o, this.lambda = n, this.nodes = []; for (var i = 0; i <= t + 2; i++) { var d = [(i - 1) * e.width / t, 0, 200 * Math.random(), .3]; this.nodes.push(d), console.log(d) } console.log(this.nodes) } function s(o) { o[1] = i / 2 * Math.sin(o[2] / 20) + e.height / 2, o[2] = o[2] + o[3] } function h(n) { var t = function (e, o) { return (o - e) / 2 + e }; o.fillStyle = n.colour, o.beginPath(), o.moveTo(0, e.height), o.lineTo(n.nodes[0][0], n.nodes[0][1]); for (var i = 0; i < n.nodes.length; i++)n.nodes[i + 1] ? o.quadraticCurveTo(n.nodes[i][0], n.nodes[i][1], t(n.nodes[i][0], n.nodes[i + 1][0]), t(n.nodes[i][1], n.nodes[i + 1][1])) : (o.lineTo(n.nodes[i][0], n.nodes[i][1]), o.lineTo(e.width, e.height)); o.closePath(), o.fill() } document.addEventListener("DOMContentLoaded", function () { var s, h, a; e = document.getElementById("canvas-2"), o = e.getContext("2d"), s = e, h && a ? (s.width = h, s.height = a) : (window.innerWidth > 1920 ? s.width = window.innerWidth : s.width = 1920, s.height = i); for (var u = 0; u < 3; u++)t.push(new l(d[u], 1, n)); r() }, !1) }(), $(document).bind("contextmenu", function (e) { e.preventDefault() });